set(USE_PACKAGED_TARGET_CELLS ON)
set(EBA_TEMPLATE_URL "https://www.eba.europa.eu/sites/default/documents/files/document_library/Risk%20Analysis%20and%20Data/EU-wide%20Stress%20Testing/2021/Launch%20of%20the%20ST/962561/2021%20EU-wide%20stress%20test%20-%20Templates_v0.xlsb")
set(EBA_LOCAL_TEMPLATE_NAME "EBA_2021_EU-wide_stress_test_Templates_v0")
set(EBA_TEMPLATE_NAME_XLSX "${CMAKE_CURRENT_BINARY_DIR}/${EBA_LOCAL_TEMPLATE_NAME}.xlsx")
set(EBA_TEMPLATE_NAME_XLSB "${CMAKE_CURRENT_BINARY_DIR}/${EBA_LOCAL_TEMPLATE_NAME}.xlsb")
set(TARGET_CELLS target_cells.json)
if (NOT EXISTS "${EBA_TEMPLATE_NAME_XLSX}")
    if (NOT EXISTS "${EBA_TEMPLATE_NAME_XLSB}")
        message(STATUS "Downloading EBA 2021 stress test template from ${EBA_TEMPLATE_URL}")
        file(DOWNLOAD ${EBA_TEMPLATE_URL} "${EBA_TEMPLATE_NAME_XLSB}"
                EXPECTED_HASH SHA256=9eaa277b7737d6ba579e0e2155c018dc5f1c17ac2e38501c867261c8da54fd13
                TLS_VERIFY ON)
    else ()
        message(STATUS "Found EBA 2021 stress test template .xlsb file")
    endif ()
    if (WIN32)
        set(_Excel_KNOWN_VERSIONS ${Excel_ADDITIONAL_VERSIONS} "16" "15" "14")
        set(_Excel_PATH)
        foreach (version ${_Excel_KNOWN_VERSIONS})
            list(APPEND _Excel_PATH "C:/Program Files/Microsoft Office/root/Office${version}")
        endforeach ()
        find_program(EXCEL_COMMAND excelcnv DOC "Excel convert executable." HINTS ${_Excel_PATH})

        if (NOT EXCEL_COMMAND)
            message(WARNING "Unable to locate excelcnv")
        else ()
            message(STATUS "Found excelcnv: ${EXCEL_COMMAND}")
            file(TO_NATIVE_PATH "${EXCEL_COMMAND}" EXCEL_COMMAND_WIN)
            file(TO_NATIVE_PATH "${EBA_TEMPLATE_NAME_XLSB}" EBA_TEMPLATE_NAME_XLSB_WIN)
            file(TO_NATIVE_PATH "${EBA_TEMPLATE_NAME_XLSX}" EBA_TEMPLATE_NAME_XLSX_WIN)
            configure_file(convert_xlsb.bat.in "${CMAKE_CURRENT_BINARY_DIR}/convert_xlsb.bat" @ONLY)
            message(STATUS "Converting EBA 2021 stress test template from .xlsb to .xlsx")
            execute_process(COMMAND "${CMAKE_CURRENT_BINARY_DIR}/convert_xlsb.bat")
        endif ()
    endif ()

    if (NOT EXCEL_COMMAND)
        find_program(SOFFICE_COMMAND soffice DOC "Open office executable." HINTS "/usr/bin/")

        if (NOT SOFFICE_COMMAND)
            message(FATAL_ERROR "Unable to locate open office (soffice) executable")
        else ()
            message(STATUS "Found openoffice: ${SOFFICE_COMMAND}")
            message(STATUS "Converting EBA 2021 stress test template from .xlsb to .xlsx")
            execute_process(COMMAND ${SOFFICE_COMMAND} --headless --convert-to xlsx "${EBA_LOCAL_TEMPLATE_NAME}.xlsb"
                    WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
        endif ()
    endif ()
else ()
    message(STATUS "Found EBA 2021 stress test template .xlsx file")
endif ()

if (NOT EXISTS "${CMAKE_CURRENT_BINARY_DIR}/${TARGET_CELLS}")
    message(STATUS "Could not find ${TARGET_CELLS} coordinate file")
    if (USE_PACKAGED_TARGET_CELLS)
        file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/${TARGET_CELLS} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
    else ()
        message(STATUS "Could not find ${TARGET_CELLS} coordinate file, extracting cells from EBA template")
        find_package(Python COMPONENTS Interpreter REQUIRED)
        execute_process(COMMAND "${Python_EXECUTABLE}" "${CMAKE_CURRENT_SOURCE_DIR}/extract_target_cells.py" "${EBA_LOCAL_TEMPLATE_NAME}.xlsx" "${TARGET_CELLS}"
                WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
    endif ()
else ()
    message(STATUS "Found ${TARGET_CELLS} coordinate file")
endif ()

find_package(nlohmann_json REQUIRED)
add_executable(EBABenchmark eba_benchmark.cpp)
target_link_libraries(EBABenchmark project_options project_warnings ExcelFiller spdlog::spdlog nlohmann_json::nlohmann_json)
